<%- include("partials/header"); -%>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">

    <style>
        .invalid-input {
            border: 1px solid red;
            color: red;
        }

        .valid-input {
            border: 1px solid green;
            color: green;
        }
    </style>

    <div class="mil-content">
        <div class="mil-scroll-wrapper transition-fade" id="swupMain">
            <div class="mil-container-fw">
                <div class="mil-section-title mil-up">
                    <div class="mil-divider"></div>
                    <h3>Blog Creation Form</h3>
                </div>

                <form id="myForm" action="/add-blog" method="POST">
                    <label for="mainKeyword">1. Keywords (Comma Seperated Value)</label>
                    <input type="text" id="mainKeyword" name="keywords" class="form-control" maxlength="70">

                    <label for="title">2. Title</label>
                    <input type="text" name="title" id="title" class="form-control">

                    <label for="metaTitle">3. Meta Title (Not More than 70 Characters)</label>
                    <input type="text" name="metaTitle" id="metaTitle" class="form-control" maxlength="70" readonly>

                    <label for="metaDesc">4. Meta Description (Not more than 160 Characters)</label>
                    <textarea name="metaDesc" class="form-control" id="metaDesc"></textarea>
                    <hr>

                    <h4>Blog Details</h4>

                    <label for="title">5. Blog URL</label>
                    <input type="text" name="url" id="url" class="form-control" readonly>

                    <label for="title">6. Blog Thumbnail Link (3 x 2)</label>
                    <input type="text" name="thumbnail" class="form-control">

                    <label for="title">6.1. Thumbnail alt Text</label>
                    <input type="text" name="thumbAlt" id="thumbAlt" class="form-control" readonly>

                    <label for="title">6.2. Thumbnail title Text</label>
                    <input type="text" name="thumbTitle" id="thumbTitle" class="form-control" readonly>

                    <label for="title">6.3. Thumbnail description Text</label>
                    <input type="text" name="thumbDesc" id="thumbDesc" class="form-control" readonly>

                    <label for="title">6.4. Thumbnail caption Text</label>
                    <input type="text" name="thumbCap" id="thumbCap" class="form-control">


                    <!-- Gallery Links -->
                    <h4>Image Gallery Details</h4>
                    <div id="galleryContainer">
                        <div class="gallery">
                            <label for="galleryLink">Gallery Link:</label>
                            <input type="text" id="galleryLink" name="gallery[1][link]" class="form-control">
                            <label>Alt Text</label>
                            <input type="text" name="gallery[1][alt]" class="form-control">
                            <label>Title Text</label>
                            <input type="text" name="gallery[1][title]" class="form-control">
                            <label>Description Text</label>
                            <input type="text" name="gallery[1][desc]" class="form-control">
                            <label>Caption Text</label>
                            <input type="text" name="gallery[1][caption]" class="form-control">
                        </div>
                    </div>
                    <button type="button" id="addGalleryLink" class="btn-primary">Add More Gallery Link</button><br><br>

                    <!-- Event Links -->
                    <h3>Videos</h3>
                    <div id="eventsContainer">
                        <label for="eventName">Event Category Name:</label>
                        <input type="text" id="eventName" name="eventName[1]" class="form-control">
                        <label for="youtubeLink">Event Link:</label>
                        <input type="text" id="eventLink" name="eventType[1][1]" class="form-control">
                        <button type="button" id="addEventLink1" onclick="addEventLink()" class="btn-primary">Add More
                            Event Link</button><br><br>
                    </div>
                    <button type="button" id="addEventTypeLink" class="btn-danger">Add More Event
                        Types</button><br><br>

                    <label for="metaDesc">7. H1 Paragraph (same as MetaDesc ) (approx 150 words )</label>
                    <textarea name="h1para" id="h1para" class="form-control" maxlength="900" readonly></textarea>

                    <label for="blog">Blog</label>
                    <textarea id="editor" name="blog" id="editor" class="form-control"></textarea>

                    <!-- Related Blog Links -->
                    <h4>Related Blog Details</h4>
                    <label>Related Blog Link ID:</label>
                    <input type="text" name="relatedBlog[1]" class="form-control">
                    <button type="button" id="addRelatedBlog" class="btn-primary">Add More Related Blog</button><br><br>

                    <!-- Related Blog Links -->
                    <h4>Related Artist Details</h4>
                    <label>Related Artist Link ID:</label>
                    <input type="text" name="relatedArtist[1]" class="form-control">
                    <button type="button" id="addRelatedArtist" class="btn-primary">Add More Related Artist</button><br><br>

                    <button type="submit" class="btn btn-danger">Submit</button>
                </form>

                <script src="https://cdn.ckeditor.com/ckeditor5/35.0.1/classic/ckeditor.js"></script>
                <script>
                    // Define a configuration object with limited features
                    var limitedConfig = {
                        toolbar: [
                            // Specify the toolbar buttons you want to include
                            'heading', '|', 'link'
                        ],
                        heading: {
                            options: [
                                { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                                { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                                { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
                                { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },
                                { model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' },
                                { model: 'heading5', view: 'h5', title: 'Heading 5', class: 'ck-heading_heading5' },
                                { model: 'heading6', view: 'h6', title: 'Heading 6', class: 'ck-heading_heading6' }
                            ]
                        }
                        // You can include any other configuration options you need
                    };

                    // Create the CKEditor instance using the limited configuration
                    ClassicEditor.create(document.querySelector("#editor"), limitedConfig)
                        .catch(err => {
                            console.error(err);
                        });
                </script>
                <script>
                    const addGalleryLinkBtn = document.getElementById("addGalleryLink");
                    const addEventLinkBtn = document.getElementById("addEventLink");
                    const addEventTypeLinkBtn = document.getElementById("addEventTypeLink");
                    const eventsContainer = document.getElementById("eventsContainer");
                    const addRelatedBlogBtn = document.getElementById("addRelatedBlog");
                    const addRelatedArtistBtn = document.getElementById("addRelatedArtist");
                    const galleryContainer = document.getElementById("galleryContainer");

                    let galleryCount = 1;
                    let eventCount = 1;
                    let eventTypeCount = 1;
                    let blogCount = 1;
                    let artistCount = 1;

                    addGalleryLinkBtn.addEventListener("click", () => {
                        galleryCount++;
                        const galleryDiv = document.createElement("div");
                        galleryDiv.className = "gallery";
                        galleryDiv.innerHTML = `
                        <label for="galleryLink">Gallery Link ${galleryCount}:</label>
                            <input type="text" id="galleryLink" name="gallery[${galleryCount}][link]" class="form-control">
                            <label>Alt Text ${galleryCount}</label>
                            <input type="text" name="gallery[${galleryCount}][alt]" class="form-control">
                            <label>Title Text ${galleryCount}</label>
                            <input type="text" name="gallery[${galleryCount}][title]" class="form-control">
                            <label>Description Text ${galleryCount}</label>
                            <input type="text" name="gallery[${galleryCount}][desc]" class="form-control">
                            <label>Caption Text ${galleryCount}</label>
                            <input type="text" name="gallery[${galleryCount}][caption]" class="form-control">
                        `;
                        galleryContainer.appendChild(galleryDiv);
                    });

                    addRelatedBlogBtn.addEventListener("click", () => {
                        blogCount++;
                        const relatedBlogInput = document.createElement("input");
                        relatedBlogInput.type = "text";
                        relatedBlogInput.name = `relatedBlog[${blogCount}]`;
                        relatedBlogInput.classList = "form-control"
                        document.getElementById("myForm").insertBefore(relatedBlogInput, addRelatedBlogBtn);
                    });

                    addRelatedArtistBtn.addEventListener("click", () => {
                        artistCount++;
                        const relatedArtistInput = document.createElement("input");
                        relatedArtistInput.type = "text";
                        relatedArtistInput.name = `relatedArtist[${artistCount}]`;
                        relatedArtistInput.classList = "form-control"
                        document.getElementById("myForm").insertBefore(relatedArtistInput, addRelatedArtistBtn);
                    });

                    function addEventLink() {
                        document.getElementById(`addEventLink${eventCount}`)
                            .addEventListener("click", () => {
                                console.log("i am pressed");
                                eventCount++;
                                const eventLinkInput = document.createElement("input");
                                eventLinkInput.type = "text";
                                eventLinkInput.name = `eventType[${eventTypeCount}][${eventCount}]`;
                                eventLinkInput.classList = "form-control"
                                eventsContainer.insertBefore(eventLinkInput, addEventLinkBtn);
                            });
                        eventCount++;
                    }

                    addEventTypeLinkBtn.addEventListener("click", () => {
                        eventCount = 1;
                        eventTypeCount++;
                        const eventDiv = document.createElement("div");
                        eventDiv.className = "event";
                        eventDiv.innerHTML = `
                            <label for="eventName">Event Name:</label>
                            <input type="text" name="eventName[${eventTypeCount}]" class="form-control">
                            <label for="youtubeLink">Event Link:</label>
                            <input type="text" name="eventType[${eventTypeCount}][1]" class="form-control">
                            <button type="button" id="addEventLink${eventTypeCount}" onclick="addEventLink()" class="btn-primary">Add More Event Link</button><br><br>
                        `;
                        eventsContainer.appendChild(eventDiv);
                    });
                </script>

                <!-- <script>
                    const mainKeywordInput = document.getElementById('mainKeyword');
                    const title = document.getElementById('title');
                    const metaTitle = document.getElementById('metaTitle');

                    mainKeywordInput.addEventListener('input', checkMainKeywordInFields);
                    title.addEventListener('input', checkMainKeywordInFields);
                    metaTitle.addEventListener('input', checkMainKeywordInFields);

                    function checkMainKeywordInFields() {
                        const mainKeyword = mainKeywordInput.value.toLowerCase();

                        const fieldsToCheck = [
                            'metaTitle',
                            'metaDesc',
                            'title',
                            'thumbAlt',
                            'thumbTitle',
                            'thumbDesc',
                            'thumbCap',
                            'blog'
                        ];

                        fieldsToCheck.forEach(fieldName => {
                            const fieldInput = document.querySelector(`[name="${fieldName}"]`);
                            if (fieldInput) {
                                const fieldValue = fieldInput.value.toLowerCase();
                                const isValid = fieldValue.includes(mainKeyword);

                                // Update the input field's class and value to show the appropriate symbol
                                if (isValid) {
                                    fieldInput.classList.remove('invalid-input');
                                    fieldInput.classList.add('valid-input');
                                } else {
                                    fieldInput.classList.remove('valid-input');
                                    fieldInput.classList.add('invalid-input');
                                }
                            }
                        });
                    }
                </script> -->

                <script>
                    // Get references to the title and metaTitle input elements
                    const keywords = document.getElementById('mainKeyword');
                    const titleInput = document.getElementById('title');
                    const metaTitleInput = document.getElementById('metaTitle');
                    const metaDesc = document.getElementById('metaDesc');
                    const url = document.getElementById('url');
                    const thumbTitle = document.getElementById('thumbTitle');
                    const thumbDesc = document.getElementById('thumbDesc');
                    const thumbAlt = document.getElementById('thumbAlt');
                    const h1para = document.getElementById('h1para');

                    // Add an event listener to the title input
                    titleInput.addEventListener('input', function () {
                        // Get the value of the title input
                        const titleValue = titleInput.value;

                        // Create the meta title by appending " | Book My Singer" to the title
                        const metaTitleValue = titleValue + " | Book My Singer";

                        const lowerCaseName = titleValue.toLowerCase();
                        const linkid = lowerCaseName.replace(/ /g, '-');

                        const urlValue = "www.bookmysinger.com/blog/" + linkid;

                        // Set the value of the metaTitle input to the new value
                        metaTitleInput.value = metaTitleValue;
                        url.value = urlValue;
                        thumbTitle.value = titleValue;
                    });

                    metaDesc.addEventListener('input', function () {
                        const metaDescValue = metaDesc.value;
                        thumbDesc.value = metaDescValue;
                        h1para.value = metaDescValue;
                    });

                    keywords.addEventListener('input', function () {
                        thumbAlt.value = keywords.value;
                    })
                </script>

                <%- include("partials/footer"); -%>